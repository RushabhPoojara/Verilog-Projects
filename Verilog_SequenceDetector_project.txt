Verilog project - Sequence Detector 1011:

Code:

module SQD_MOORE_1011(in,clock,reset,detector_out);
  
  
input clock; 			 // clock signal
input reset; 			 // reset input
input in; 	 			 // binary input
output reg detector_out; // output of the sequence detector
  
  
parameter  
  
  S0=3'b000,            // "Zero" State
  S1=3'b001,            // "One" State
  S2=3'b011,     	    // "OneZero" State
  S3=3'b010,            // "OnceZeroOne" State
  S4=3'b110; 			// "OneZeroOneOne" State
  
  
  
  reg [2:0] current_state, next_state;  // current state and next state
  
    
// sequential memory of the Moore FSM
  
always @(posedge clock, posedge reset)
  
begin
  
  if(reset==1)  current_state <= S0; // when reset=1, reset the state of the FSM to "Zero" State
  else current_state <= next_state;  // otherwise, next state
 end 
 
  
// combinational logic of the Moore FSM to determine next state
  

always @(current_state,in)
begin
  
 case(current_state) 
 S0:begin
  if(in==1)
   next_state = S1;
  else
   next_state = S0;
 end
 S1:begin
  if(in==0)
   next_state = S2;
  else
   next_state = S1;
 end
 S2:begin
  if(in==0)
   next_state = S0;
  else
   next_state = S3;
 end 
 S3:begin
   if(in==0)
   next_state = S2;
  else
   next_state = S4;
 end
 S4:begin
  if(in==0)
   next_state = S2;
  else
   next_state = S1;
 end
   
 default:next_state = S0;
 endcase
end
  
  
  
// combinational logic to determine the output of the Moore FSM, output only depends on current state

always @(current_state)
begin 
 case(current_state) 
 S0:   detector_out = 0;
 S1:   detector_out = 0;
 S2:   detector_out = 0;
 S3:   detector_out = 0;
 S4:   detector_out = 1;
   
 default:  detector_out = 0;
 endcase
end 
  
endmodule




Testbench:


// Code your testbench here
// or browse Examples
`timescale 1ns / 1ps
 
module Testbench;

 reg sequence_in;  
 reg clock;
 reg reset;
 wire detector_out;
  

 // Instantiate the Sequence Detector using Moore FSM
  SQD_MOORE_1011 uut(.in(sequence_in),.clock(clock), .reset(reset),.detector_out(detector_out));
  
  
 initial 
  begin
 clock = 0;
 forever #5 clock = ~clock;
  end 
  
 initial
   begin
     
  // Initialize Inputs    
  sequence_in = 0;
  reset = 1;
     
  // Wait 100 ns for global reset to finish
  #30;
      reset = 0;
  #40;
  sequence_in = 1;
  #10;
  sequence_in = 0;
  #10;
  sequence_in = 1; 
  #20;
  sequence_in = 0; 
  #20;
  sequence_in = 1; 
  #20;
  sequence_in = 0;  

 end
      
endmodule